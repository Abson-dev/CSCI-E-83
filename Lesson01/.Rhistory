install.packages('pROC')
install.packages('glmnet')
library(tidyverse)
library(truncnorm)
library(rockchalk)
library(tmvtnorm)
#make correlated age and home ownership
myR <- lazyCor(X = 0, d = 2)
mySD <- c(3,2)
#simulate correlated data with constraints
dat <- tmvtnorm::rtmvnorm(n = 700, mean=c(6, 4), sigma=lazyCov(Rho = myR, Sd = mySD), lower=c(0, 0), upper=c(10, 10))
# dat <- MASS::mvrnorm(n = 1000, mu=c(35, 0), Sigma=lazyCov(Rho = myR, Sd = mySD))
dat <- apply(dat, 2, round)
dat <- as.data.frame(dat)
names(dat) <- c("y",
"x")
ggplot(dat, aes(x=`x`, y=`y`))+
geom_smooth(method=lm)+
geom_jitter()+
theme_light()+
scale_x_continuous(name="Something", lim=c(0, 10))+
scale_y_continuous(name="Something Completely Unrelated", lim=c(0, 10))
temp <- NULL
for (i in 5:300){
mod <- lm(y ~ x, data=dat[4:i,] )
temp <- c(temp, mod$coefficients[2])
}
temp <- data.frame(n=5:300, slope=temp)
ggplot(temp, aes(x=n, y=slope))+
geom_line()+
theme_light()+
ggtitle("How Slope Changes as Data Are Added")
temp <- NULL
for (i in 5:700){
mod <- lm(y ~ x, data=dat[4:i,] )
temp <- c(temp, coef(summary(mod))[2,4])
}
temp <- data.frame(n=5:700, pval=temp)
ggplot(temp, aes(x=n, y=pval))+
geom_line()+
theme_light()+
scale_y_continuous(breaks=seq(0, 1, .05)) +
geom_hline(color="red", yintercept = .05, size=1)+
ggtitle("How p-Value Changes as Data Are Added")
install.packages(c("truncnorm", "rockchalk", "tmvtnorm"))
library(tidyverse)
library(truncnorm)
library(rockchalk)
library(tmvtnorm)
#make correlated age and home ownership
myR <- lazyCor(X = 0, d = 2)
mySD <- c(3,2)
#simulate correlated data with constraints
dat <- tmvtnorm::rtmvnorm(n = 700, mean=c(6, 4), sigma=lazyCov(Rho = myR, Sd = mySD), lower=c(0, 0), upper=c(10, 10))
# dat <- MASS::mvrnorm(n = 1000, mu=c(35, 0), Sigma=lazyCov(Rho = myR, Sd = mySD))
dat <- apply(dat, 2, round)
dat <- as.data.frame(dat)
names(dat) <- c("y",
"x")
ggplot(dat, aes(x=`x`, y=`y`))+
geom_smooth(method=lm)+
geom_jitter()+
theme_light()+
scale_x_continuous(name="Something", lim=c(0, 10))+
scale_y_continuous(name="Something Completely Unrelated", lim=c(0, 10))
temp <- NULL
for (i in 5:300){
mod <- lm(y ~ x, data=dat[4:i,] )
temp <- c(temp, mod$coefficients[2])
}
temp <- data.frame(n=5:300, slope=temp)
ggplot(temp, aes(x=n, y=slope))+
geom_line()+
theme_light()+
ggtitle("How Slope Changes as Data Are Added")
temp <- NULL
for (i in 5:700){
mod <- lm(y ~ x, data=dat[4:i,] )
temp <- c(temp, coef(summary(mod))[2,4])
}
temp <- data.frame(n=5:700, pval=temp)
ggplot(temp, aes(x=n, y=pval))+
geom_line()+
theme_light()+
scale_y_continuous(breaks=seq(0, 1, .05)) +
geom_hline(color="red", yintercept = .05, size=1)+
ggtitle("How p-Value Changes as Data Are Added")
library(truncnorm)
library(tidyverse)
a <- truncnorm::rtruncnorm(120, a=0,b=10, mean=6, sd=3) %>% round()
b <- truncnorm::rtruncnorm(120, a=0,b=10, mean=5, sd=2.5) %>% round()
dat <- data.frame(
Enjoyment=c(a,b),
Player=c(rep("Identify with Character",120), rep("Don't Identify with Character",120)) %>% as.factor()
)
dat %>% ggplot(., aes(x=Player, y=Enjoyment, fill=Player))+
geom_boxplot(notch=TRUE)+
geom_jitter()+
theme_light()+
scale_x_discrete(name="Player's Relationship to Game Character")+
scale_y_continuous(name="Enjoyment of Game")+
theme(legend.position = "none")
library(truncnorm)
library(tidyverse)
a <- truncnorm::rtruncnorm(120, a=0,b=10, mean=6, sd=2) %>% round()
b <- truncnorm::rtruncnorm(120, a=0,b=10, mean=6, sd=2) %>% round()
c <- truncnorm::rtruncnorm(120, a=0,b=10, mean=8, sd=2) %>% round()
d <- truncnorm::rtruncnorm(120, a=0,b=10, mean=3, sd=2) %>% round()
dat <- data.frame(
Enjoyment=c(a,b,c,d),
Identify=c(rep("Identify with Character",120), rep("Don't Identify with Character",120)) %>% as.factor(),
Level=c(rep("Action-Driven Level",240), rep("Story-Driven Level",240)) %>% as.factor()
)
dat %>% ggplot(., aes(x=Level, y=Enjoyment, fill=Identify))+
geom_boxplot(notch=TRUE)+
geom_jitter(alpha=.5, aes(color=Identify))+
theme_light()+
scale_x_discrete(name="Player's Relationship to Game Character")+
scale_y_continuous(name="Enjoyment of Game")
library(tidyverse)
library(truncnorm)
library(rockchalk)
library(tmvtnorm)
#make correlated age and home ownership
myR <- lazyCor(X = 0.4, d = 2)
mySD <- c(3,2)
#simulate correlated data with constraints
dat <- tmvtnorm::rtmvnorm(n = 300, mean=c(6, 4), sigma=lazyCov(Rho = myR, Sd = mySD), lower=c(0, 0), upper=c(10, 10))
# dat <- MASS::mvrnorm(n = 1000, mu=c(35, 0), Sigma=lazyCov(Rho = myR, Sd = mySD))
dat <- apply(dat, 2, round)
dat <- as.data.frame(dat)
names(dat) <- c("Identification with Player Character",
"Enjoyment of Game")
ggplot(dat, aes(x=`Identification with Player Character`, y=`Enjoyment of Game`))+
geom_smooth(method=lm)+
geom_jitter()+
theme_light()+
scale_x_continuous(lim=c(0, 10))+
scale_y_continuous(lim=c(0, 10))
library(truncnorm)
library(tidyverse)
a <- truncnorm::rtruncnorm(120, a=0,b=10, mean=6, sd=2) %>% round()
b <- truncnorm::rtruncnorm(120, a=0,b=10, mean=6, sd=2) %>% round()
c <- truncnorm::rtruncnorm(120, a=0,b=10, mean=8, sd=2) %>% round()
d <- truncnorm::rtruncnorm(120, a=0,b=10, mean=3, sd=2) %>% round()
dat <- data.frame(
Enjoyment=c(a,b,c,d),
Identify=c(rep("Identify with Character",120), rep("Don't Identify with Character",120)) %>% as.factor(),
Level=c(rep("Action-Driven Level",240), rep("Story-Driven Level",240)) %>% as.factor()
)
dat %>% ggplot(., aes(x=Level, y=Enjoyment, fill=Identify))+
geom_boxplot(notch=TRUE)+
geom_jitter(alpha=.5, aes(color=Identify))+
theme_light()+
scale_x_discrete(name="Player's Relationship to Game Character")+
scale_y_continuous(name="Enjoyment of Game")
library(tidyverse)
library(truncnorm)
library(rockchalk)
library(tmvtnorm)
#set seed
set.seed(484372)
myR <- lazyCor(X = 0.6, d = 2)
mySD <- c(1,2)
#simulate correlated data with constraints
dat <- tmvtnorm::rtmvnorm(n = 300, mean=c(2, 4), sigma=lazyCov(Rho = myR, Sd = mySD), lower=c(0, 0), upper=c(4, 10))
dat <- apply(dat, 2, round, 2)
dat <- as.data.frame(dat)
names(dat) <- c("Hours", "SocialMedia")
dat$Hours <- dat$Hours^2
ggplot(dat, aes(x=Hours, y=SocialMedia))+
geom_smooth(method=lm)+
geom_jitter()+
theme_light()+
scale_x_continuous(lim=c(0, NA))+
scale_y_continuous(lim=c(0, 10))
library(tidyverse)
library(truncnorm)
library(rockchalk)
library(tmvtnorm)
#set seed
set.seed(484372)
myR <- lazyCor(X = 0.6, d = 2)
mySD <- c(1,2)
#simulate correlated data with constraints
dat <- tmvtnorm::rtmvnorm(n = 300, mean=c(2, 4), sigma=lazyCov(Rho = myR, Sd = mySD), lower=c(0, 0), upper=c(4, 10))
dat <- apply(dat, 2, round, 2)
dat <- as.data.frame(dat)
names(dat) <- c("Hours", "SocialMedia")
dat$Hours <- dat$Hours^2
ggplot(dat, aes(x=Hours, y=SocialMedia))+
geom_smooth(method=lm)+
geom_jitter()+
theme_light()+
scale_x_continuous(lim=c(0, NA))+
scale_y_continuous(lim=c(0, 10))
library(truncnorm)
library(tidyverse)
a <- truncnorm::rtruncnorm(120, a=0,b=10, mean=6, sd=2) %>% round()
b <- truncnorm::rtruncnorm(120, a=0,b=10, mean=6, sd=2) %>% round()
c <- truncnorm::rtruncnorm(120, a=0,b=10, mean=8, sd=2) %>% round()
d <- truncnorm::rtruncnorm(120, a=0,b=10, mean=3, sd=2) %>% round()
dat <- data.frame(
Enjoyment=c(a,b,c,d),
Identify=c(rep("Identify with Character",120), rep("Don't Identify with Character",120)) %>% as.factor(),
Level=c(rep("Action-Driven Level",240), rep("Story-Driven Level",240)) %>% as.factor()
)
dat %>% ggplot(., aes(x=Level, y=Enjoyment, fill=Identify))+
geom_boxplot(notch=TRUE)+
geom_jitter(alpha=.5, aes(color=Identify))+
theme_light()+
scale_x_discrete(name="Player's Relationship to Game Character")+
scale_y_continuous(name="Enjoyment of Game")
dat
library(tidyverse)
library(truncnorm)
library(rockchalk)
library(tmvtnorm)
#set seed
set.seed(484372)
#input cov matrix
myR <- rbind(
c(1. , 0.7, 0.7, 0. ),
c(0.7, 1. , 0.6, 0.7),
c(0.7, 0.6, 1. , 0.2 ),
c(0. , 0.7, 0.2 , 1. )
)
mySD <- c(3,2, 2, 2)
#simulate correlated data with constraints
#everything is on 0-10 scale (imagine company has some metric in place) except hours
dat <- tmvtnorm::rtmvnorm(n = 300, mean=c(3, 2, 3, 2), sigma=lazyCov(Rho = myR, Sd = mySD), lower=c(0, 0, 0, 0), upper=c(10, 4, 10, 10))
dat <- as.data.frame(dat)
names(dat) <- c("Fan", "Hours", "SocialMedia", "Familiarity")
#square hours to give it positive skew
dat$Hours <- dat$Hours^2
#round non-hours vars
dat[,-2] <- apply(dat[,-2], 2, round)
#round hours to 2 decimals
dat$Hours <- round(dat$Hours, 2)
#test
#direct effect - check
lm(SocialMedia ~ Hours, data=dat) %>% summary()
#confound removed and hours matters less (good thing) - check
lm(SocialMedia ~ Hours + Fan, data=dat) %>% summary()
# controlling for famliarity reduces impact of hours (bad thing) - check
lm(SocialMedia ~ Hours + Familiarity, data=dat) %>% summary()
seq(10)
1:10:1
info()
version()
?version
R.version()
R.Version()
sessionInfo()
library(caret)
library(gmb)
library(e1071)
sessionInfo()
library(gmb)
library(gbm)
library('caret')
libraty('e1071')
library('e1071')
?info
??info
??version
sessionInfo()
sessionInfo()
install.packages('bookdown')
install.packages(c("backports", "BH", "broom", "callr", "caret", "caTools", "classInt", "cli", "clipr", "curl", "data.table", "DBI", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "ggplot2", "glue", "gplots", "haven", "hms", "htmltools", "httr", "igraph", "IRkernel", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "labelled", "later", "lava", "markdown", "mime", "mnormt", "ModelMetrics", "modelr", "mvtnorm", "nloptr", "openssl", "pillar", "pkgconfig", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "R6", "Rcpp", "recipes", "repr", "rlang", "rstudioapi", "rvest", "scales", "selectr", "shiny", "SQUAREM", "stringi", "sys", "tidyr", "tidyselect", "tidyverse", "tinytex", "uuid", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "callr", "caret", "caTools", "classInt", "cli", "clipr", "curl", "data.table", "DBI", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "ggplot2", "glue", "gplots", "haven", "hms", "htmltools", "httr", "igraph", "IRkernel", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "labelled", "later", "lava", "markdown", "mime", "mnormt", "ModelMetrics", "modelr", "mvtnorm", "nloptr", "openssl", "pillar", "pkgconfig", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "R6", "Rcpp", "recipes", "repr", "rlang", "rstudioapi", "rvest", "scales", "selectr", "shiny", "SQUAREM", "stringi", "sys", "tidyr", "tidyselect", "tidyverse", "tinytex", "uuid", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "callr", "caret", "caTools", "classInt", "cli", "clipr", "curl", "data.table", "DBI", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "ggplot2", "glue", "gplots", "haven", "hms", "htmltools", "httr", "igraph", "IRkernel", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "labelled", "later", "lava", "markdown", "mime", "mnormt", "ModelMetrics", "modelr", "mvtnorm", "nloptr", "openssl", "pillar", "pkgconfig", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "R6", "Rcpp", "recipes", "repr", "rlang", "rstudioapi", "rvest", "scales", "selectr", "shiny", "SQUAREM", "stringi", "sys", "tidyr", "tidyselect", "tidyverse", "tinytex", "uuid", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "callr", "caret", "caTools", "classInt", "cli", "clipr", "curl", "data.table", "DBI", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "ggplot2", "glue", "gplots", "haven", "hms", "htmltools", "httr", "igraph", "IRkernel", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "labelled", "later", "lava", "markdown", "mime", "mnormt", "ModelMetrics", "modelr", "mvtnorm", "nloptr", "openssl", "pillar", "pkgconfig", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "R6", "Rcpp", "recipes", "repr", "rlang", "rstudioapi", "rvest", "scales", "selectr", "shiny", "SQUAREM", "stringi", "sys", "tidyr", "tidyselect", "tidyverse", "tinytex", "uuid", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "callr", "caret", "caTools", "classInt", "cli", "clipr", "curl", "data.table", "DBI", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "ggplot2", "glue", "gplots", "haven", "hms", "htmltools", "httr", "igraph", "IRkernel", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "labelled", "later", "lava", "markdown", "mime", "mnormt", "ModelMetrics", "modelr", "mvtnorm", "nloptr", "openssl", "pillar", "pkgconfig", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "R6", "Rcpp", "recipes", "repr", "rlang", "rstudioapi", "rvest", "scales", "selectr", "shiny", "SQUAREM", "stringi", "sys", "tidyr", "tidyselect", "tidyverse", "tinytex", "uuid", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "callr", "caret", "caTools", "classInt", "cli", "clipr", "curl", "data.table", "DBI", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "ggplot2", "glue", "gplots", "haven", "hms", "htmltools", "httr", "igraph", "IRkernel", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "labelled", "later", "lava", "markdown", "mime", "mnormt", "ModelMetrics", "modelr", "mvtnorm", "nloptr", "openssl", "pillar", "pkgconfig", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "R6", "Rcpp", "recipes", "repr", "rlang", "rstudioapi", "rvest", "scales", "selectr", "shiny", "SQUAREM", "stringi", "sys", "tidyr", "tidyselect", "tidyverse", "tinytex", "uuid", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "callr", "caret", "caTools", "classInt", "cli", "clipr", "curl", "data.table", "DBI", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "ggplot2", "glue", "gplots", "haven", "hms", "htmltools", "httr", "igraph", "IRkernel", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "labelled", "later", "lava", "markdown", "mime", "mnormt", "ModelMetrics", "modelr", "mvtnorm", "nloptr", "openssl", "pillar", "pkgconfig", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "R6", "Rcpp", "recipes", "repr", "rlang", "rstudioapi", "rvest", "scales", "selectr", "shiny", "SQUAREM", "stringi", "sys", "tidyr", "tidyselect", "tidyverse", "tinytex", "uuid", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages('tidyverse')
install.packages('caret')
install.packages('gmb')
install.packages('gmb')
install.packages('e1071')
install.packages('MLmetrics')
install.packages('repr')
install.packages('gridExtra')
install.packages('ggplot2')
install.packages('gmb')
install.packages('IRkernel')
IRkernel::installspec()
sessionInfo()
library(caret)
library(gmb)
install.packages('gmb')
install.packages('gbm')
library(gbm)
library(caret)
library(e1071)
sessionInfo()
install.packages("reticulate")
import pandas as pd
import numpy as np
View(myR)
View(assets)
View(dat)
View(iris)
install.packages('tinytex')
tinytex::install_tinytex()
View(hr)
View(myR)
View(myR)
View(R)
install.packages('bookdown')
tinytex::reinstall_tinytex()
Sys.getenv("QT_PLUGIN_PATH")
n
n
View(cluster)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
# Chunk 1: setup
knitr::opts_chunk$set(cache=TRUE)
# Chunk 2
print('Test')
knitr::opts_chunk$set(cache=TRUE)
print('Test')
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::include_graphics(rep("images/Simulation_Directed_Graph.jpg"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::include_graphics(rep("images/Simulation_Directed_Graph.jpg"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::include_graphics(rep("images/Simulation_Directed_Graph.jpg"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::include_graphics(rep("images/Simulation_Directed_Graph.jpg"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::include_graphics(rep("images/Simulation_Directed_Graph.jpg"))
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#knitr::knit_engines$set(python = reticulate::eng_python)
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "carData", "caTools", "classInt", "cli", "clipr", "colorspace", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "e1071", "ellipsis", "fansi", "forcats", "foreach", "fs", "gbm", "generics", "ggplot2", "glmnet", "glue", "gmm", "gower", "gplots", "gtools", "haven", "htmltools", "httpuv", "httr", "igraph", "IRkernel", "isoband", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "kutils", "labeling", "labelled", "later", "lava", "lavaan", "lme4", "lubridate", "magrittr", "markdown", "mime", "mnormt", "modelr", "mvtnorm", "nloptr", "openssl", "openxlsx", "pbdZMQ", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "pROC", "processx", "prodlim", "promises", "ps", "purrr", "questionr", "R6", "Rcpp", "RcppEigen", "readr", "recipes", "reshape2", "reticulate", "rlang", "rmarkdown", "ROCR", "rprojroot", "rstudioapi", "rvest", "sandwich", "scales", "selectr", "shape", "shiny", "SQUAREM", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "uuid", "vctrs", "whisker", "withr", "xfun", "xml2", "yaml", "zip", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
reticulate::repl_python()
import pymc3
import pymc3
import sys
print(sys.executable)
C:\Program Files\RStudio\bin\rsession.exe -m pip install pymc3
<C:\Program Files\RStudio\bin\rsession.exe> -m pip install pymc3
'C:\Program Files\RStudio\bin\rsession.exe' -m pip install pymc3
C:\Program Files\RStudio\bin\rsession.exe -m pip install pymc3
python -m pip install pymc3
!C:\Program Files\RStudio\bin\rsession.exe -m pip install pymc3
print(sys.executable)
import sys
print(sys.executable)
C:\Program Files\RStudio\bin\rsession.exe
C:\\Program Files\\RStudio\\bin\\rsession.exe
pip install --target=C:\\Program Files\\RStudio\\bin pymc3
!pip install --target=C:\\Program Files\\RStudio\\bin pymc3
!pip install --target=C:\\ProgramFiles\\RStudio\\bin pymc3
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python("/usr/bin/python3")
matplotlib <- import("matplotlib")
import pandas as pd
import numpy as np
import numpy.random as nr
import numpy.linalg as npla
import io
import requests
from math import sqrt, acos
import seaborn as sns
import matplotlib as plt
#%matplotlib inline
install.packages('xfun')
install.packages('xfun')
install.packages("xfun")
install.packages("xfun")
install.packages("kniter")
devtools::install_github("mkearney/rmd2jupyter")
install.packages('devtools')
install.packages("devtools")
install.packages('devtools')
library(devtools)
libgrary('Devtools')
library(devtools)
devtools::install_github("mkearney/rmd2jupyter")
devtools::install_github("mkearney/rmd2jupyter")
rmd2jupyter("03-Chapter3.Rmd")
library(rmd2jupyter)
rmd2jupyter("03-Chapter3.Rmd")
getwd()
setwd('C:\Users\StevePC2\Documents\Git\CSCI-E-83\Lesson01')
setwd('C:\\Users\\StevePC2\\Documents\\Git\\CSCI-E-83\\Lesson01')
getwd()
rmd2jupyter("03-Chapter3.Rmd")
rmd2jupyter("04-Chapter4.Rmd")
rmd2jupyter("05-Chapter5.Rmd")
